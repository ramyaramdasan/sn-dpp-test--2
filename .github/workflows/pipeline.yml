name: ServiceNow GitHub Actions Demo

on:
  pull_request:
  push:
    branches:
      - master

jobs:
  build:
    name: Publish from Dev
    runs-on: ubuntu-latest
    # if: ${{ github.event_name == 'pull_request'}}
    
    steps:

      - name: ServiceNow CI/CD Apply Changes
        uses: ServiceNow/sncicd-apply-changes@1.0.0
        env:
          snowUsername: ${{ secrets.SN_USERNAME }}
          snowPassword: ${{ secrets.SN_PASSWORD }}
          snowSourceInstance: ${{ secrets.SN_DEV_INSTANCE }}
          appSysID: ${{ secrets.SN_APP_SYSID }}

      - name: ServiceNow CI/CD Publish App
        id: publish_app
        uses: ServiceNow/sncicd-publish-app@1.0.0
        with:
          versionFormat: detect
        env:
          snowUsername: ${{ secrets.SN_USERNAME }}
          snowPassword: ${{ secrets.SN_PASSWORD }}
          snowSourceInstance: ${{ secrets.SN_DEV_INSTANCE }}
          appSysID: ${{ secrets.SN_APP_SYSID }}
       
      - id: version
        run: |
          # use bash variable expression to get the substring
          export PUBLISH_VERSION="${{ steps.publish_app.outputs.newVersion }}"
          echo "::set-output name=publishversion::${PUBLISH_VERSION}"
    outputs:
      publishversion: ${{ steps.version.outputs.publishversion }}

  test:
    needs: build
    name: Run ATF in Test
    runs-on: ubuntu-latest
    # if: ${{ github.event_name == 'pull_request'}}
    
    steps:

      - name: ServiceNow CI/CD Install App
        id: install_app
        uses: ServiceNow/sncicd-install-app@1.0.0
        with:
          version: ${{ needs.build.outputs.publishversion }}
        env:
          snowUsername: ${{ secrets.SN_USERNAME }}
          snowPassword: ${{ secrets.SN_PASSWORD }}
          snowInstallInstance: ${{ secrets.SN_TEST_INSTANCE }}
          appSysID: ${{ secrets.SN_APP_SYSID }}

      - name: ServiceNow CI/CD Run ATF Test Suite
        uses: ServiceNow/sncicd-tests-run@1.0.0
        with:
          testSuiteSysId: ${{ secrets.SN_ATFTESTSUITE_SYSID }}
        env:
          snowUsername: ${{ secrets.SN_USERNAME }}
          snowPassword: ${{ secrets.SN_PASSWORD }}
          snowInstallInstance: ${{ secrets.SN_TEST_INSTANCE }}

      - name: ServiceNow CI/CD Rollback App
        if: ${{ failure() && steps.install_app.outputs.rollbackVersion }}
        uses: ServiceNow/sncicd-rollback-app@1.0.0
        with:
          version: ${{steps.install_app.outputs.rollbackVersion}}
        env:
          snowUsername: ${{ secrets.SN_USERNAME }}
          snowPassword: ${{ secrets.SN_PASSWORD }}
          snowInstallInstance: ${{ secrets.SN_TEST_INSTANCE }}
          appSysID: ${{ secrets.SN_APP_SYSID }}

      - id: version
        run: |
          # use bash variable expression to get the substring
          export PUBLISH_VERSION="${{ needs.build.outputs.publishversion }}"
          echo "::set-output name=publishversion::${PUBLISH_VERSION}"
    outputs:
      publishversion: ${{ steps.version.outputs.publishversion }}

  deployprod:
    needs: test
    name: Deploy to Prod
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}
    steps:
    
      - name: ServiceNow CI/CD Install App
        id: install_app_prod
        uses: ServiceNow/sncicd-install-app@1.0.0
        with:
          version: ${{ needs.test.outputs.publishversion }}
        env:
          snowUsername: ${{ secrets.SN_USERNAME }}
          snowPassword: ${{ secrets.SN_PASSWORD }}
          snowInstallInstance: ${{ secrets.SN_PROD_INSTANCE }}
          appSysID: ${{ secrets.SN_APP_SYSID }}
